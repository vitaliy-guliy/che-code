#
# Copyright (c) 2021 Red Hat, Inc.
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#

name: Publish Image PR check

on:
  workflow_run:
    workflows: ["Pull Request Check"]
    types:
      - completed

jobs:

  publish-images:
    name: publish image from the pull request
    runs-on: ubuntu-22.04
    steps:

      - name: Print original workflow ID
        run: |
          echo "Original Workflow ID: [${{ github.event.workflow_run.workflow_id }}]"
          echo "Original Run ID: [${{ github.event.workflow_run.id }}]"

      - name: Download Pull Request Number artifact
        uses: actions/download-artifact@v4
        with:
          # run-id: ${{ github.event.workflow_run.workflow_id }}
          name: pull-request-number
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ github.token }}

      # - name: Download Pull Request Number artifact
      #   uses: dawidd6/action-download-artifact@v2
      #   with:
      #     workflow: ${{ github.event.workflow_run.workflow_id }}
      #     name: pull-request-number

      - name: Grab Pull Request number
        run: |
          pr_number=$(cat "PR_NUMBER")
          echo "Use PR ${pr_number}"
          if ! [[ "$pr_number" =~ ^[0-9]+$ ]]; then
            echo "pr number invalid"
            exit 1
          fi
          echo "_PR_NUMBER=$pr_number" >> $GITHUB_ENV

      # - name: Download Pull Request SHA
      #   uses: dawidd6/action-download-artifact@v2
      #   with:
      #     workflow: ${{ github.event.workflow_run.workflow_id }}
      #     name: pull-request-sha

      # - name: Grab Pull Request SHA
      #   run: |
      #     pr_sha=$(cat "PR_SHA")
      #     echo "_PR_SHA=$pr_sha" >> $GITHUB_ENV

      # - name: Summary
      #   run: |
      #     echo "-----------------------------------------------------"
      #     echo "env._PR_NUMBER: ${{env._PR_NUMBER}}"
      #     echo "env._PR_SHA: ${{env._PR_SHA}}"
      #     echo "-----------------------------------------------------"

      - name: Cleanup docker images
        run: |
          docker system prune -af

      - name: Login to Quay.io
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_PULL_REQUESTS_USERNAME }}
          password: ${{ secrets.QUAY_PULL_REQUESTS_PASSWORD }}

      - name: Download che-code docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: che-code
          path: .
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ github.token }}

      - name: Download che-dev docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: che-dev
          path: .
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ github.token }}

      - name: Load che-code Docker image
        run: |
          docker load -i che-code.tgz

      - name: Load che-dev Docker image
        run: |
          docker load -i che-code.tgz

      - name: Push che-code docker image
        run: |
          # export IMAGE=quay.io/che-incubator-pull-requests/che-code:pr-${{env._PR_NUMBER}}-amd64
          export IMAGE=quay.io/vgulyy/che-code:pr-${{env._PR_NUMBER}}-amd64

          docker tag che-code ${IMAGE}
          docker push ${IMAGE}
          echo "_CHE_CODE_IMAGE=${IMAGE}" >> $GITHUB_ENV

      - name: Push che-dev docker image
        run: |
          # export IMAGE=quay.io/che-incubator-pull-requests/che-code-dev:pr-${{env._PR_NUMBER}}-dev-amd64
          export IMAGE=quay.io/vgulyy/che-code-dev:pr-${{env._PR_NUMBER}}-dev-amd64

          docker tag che-dev ${IMAGE}
          docker push ${IMAGE}
          echo "_CHE_DEV_IMAGE=${IMAGE}" >> $GITHUB_ENV

      - name: 'Comment PR'
        uses: actions/github-script@v6
        with:
         script: |
           const { repo: { owner, repo } } = context;
           await github.rest.issues.createComment({
              issue_number: process.env.PR_NUMBER,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Pull Request images published âœ¨\nEditor image: ${process.env._CHE_CODE_IMAGE}\nDev image: ${process.env._CHE_DEV_IMAGE}`
            })
